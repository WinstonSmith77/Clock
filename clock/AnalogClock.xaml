<UserControl x:Class="Clock.clock.AnalogClock"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:Converters="clr-namespace:Uhr.clock.Converters"
             xmlns:converters="clr-namespace:Clock.clock.Converters" mc:Ignorable="d" x:Name="analog" >

    <UserControl.Resources>
        <Converters:HoursToAngleConverter  x:Key="hoursToAngle" />
        <converters:MinutesOrSecondsToAngleConverter  x:Key="minsToAngle" />
        <converters:IsEvenConverter  x:Key="isEven" />
        <Storyboard x:Key="blur">
            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.Angle"  From="-6" To="6" Duration="0:0:0.1"  />
            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.Angle"  From="6" To="0" Duration="0:0:0.1" />
        </Storyboard>

    </UserControl.Resources>
    <Viewbox>
        <Grid Width="100" Height="100">

            <Canvas>
                <Ellipse Width="100" Height="100" Stroke="{Binding ElementName=analog, Path=Stroke }" StrokeThickness="2"/>
                <Ellipse Width="4" Height="4" Stroke="{Binding ElementName=analog, Path=Stroke }"  Canvas.Left="48" Canvas.Top="5" />
                <Ellipse Width="4" Height="4" Stroke="{Binding ElementName=analog, Path=Stroke }"  Canvas.Left="48" Canvas.Top="91" />

                <Ellipse Width="4" Height="4" Stroke="{Binding ElementName=analog, Path=Stroke }" Canvas.Top="48" Canvas.Left="5" />
                <Ellipse Width="4" Height="4" Stroke="{Binding ElementName=analog, Path=Stroke }"  Canvas.Top="48" Canvas.Left="91" />
            </Canvas>


            <Canvas>
                <Canvas.RenderTransform>
                    <RotateTransform CenterX="50" CenterY="50" Angle="{Binding Path=Hours, Converter={StaticResource hoursToAngle}}" />
                </Canvas.RenderTransform>
                <Line X1="50" Y1="50" X2="50" Y2="15" Stroke="{Binding ElementName=analog, Path=Stroke }" StrokeThickness="5" StrokeEndLineCap="Round" StrokeStartLineCap="Round"/>
            </Canvas>
            <Canvas>
                <Canvas.RenderTransform>
                    <RotateTransform CenterX="50" CenterY="50" Angle="{Binding Path=Minutes, Converter={StaticResource minsToAngle}}" />
                </Canvas.RenderTransform>
                <Line X1="50" Y1="50" X2="50" Y2="5" Stroke="{Binding ElementName=analog, Path=Stroke }" StrokeThickness="5" StrokeEndLineCap="Round" StrokeStartLineCap="Round"/>
            </Canvas>
            <Canvas>


                <Canvas.RenderTransform>
                    <RotateTransform CenterX="50" CenterY="50" Angle="{Binding Path=Seconds, Converter={StaticResource minsToAngle}}" />
                </Canvas.RenderTransform>
                <Line  X1="50" Y1="50" X2="50" Y2="5" Stroke="{Binding ElementName=analog, Path=Stroke }" StrokeThickness="2" StrokeEndLineCap="Round" StrokeStartLineCap="Round">
                    <Line.RenderTransform>
                        <RotateTransform CenterX="50" CenterY="50" Angle="0" />
                    </Line.RenderTransform>
                    <Line.Style>
                        <Style>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Seconds, Converter={StaticResource isEven}}" Value="true" >
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource blur}" />
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <BeginStoryboard Storyboard="{StaticResource blur}" />
                                    </DataTrigger.ExitActions>

                                </DataTrigger>

                            </Style.Triggers>
                        </Style>
                    </Line.Style>

                </Line>
            </Canvas>
        </Grid>
    </Viewbox>
</UserControl>
